name: Build and Deploy
env:
  GITHUB_OWNER: borudesigns
  GITHUB_REPOSITORY: sms
  GITHUB_IMAGE: sms
  APP_DOMAIN: sms.borudesigns.com
  APP_PATH: /
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    outputs:
      DIGEST: ${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to Azure Key Vault
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Get Key Vault secrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "anansi"
          secrets: 'CONTAINER-REGISTRY-FULL'
        id: keyVault
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ steps.keyVault.outputs.CONTAINER-REGISTRY-FULL }}
      - name: Push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ env.GITHUB_OWNER }}/${{ env.GITHUB_REPOSITORY }}/${{ env.GITHUB_IMAGE }}
      - name: Create k8s deployment spec
        run: |
          mkdir deployments
          sed -e "s|%GITHUB_OWNER%|${{ env.GITHUB_OWNER }}|g" \
          -e "s|%GITHUB_REPOSITORY%|${{ env.GITHUB_REPOSITORY }}|g" \
          -e "s|%GITHUB_IMAGE%|${{ env.GITHUB_IMAGE }}|g" \
          -e "s|%APP_DOMAIN%|${{ env.APP_DOMAIN }}|g" \
          -e "s|%APP_PATH%|${{ env.APP_PATH }}|g" \
          templates/k8s.yaml > deployments/app.yaml
      - name: Upload k8s artifact
        uses: actions/upload-artifact@v2
        with:
          name: k8s
          path: deployments
  deploy:
    needs: [build]
    name: Deploy image
    runs-on: ubuntu-latest
    steps:
      - name: Download k8s artifact
        uses: actions/download-artifact@v2
        with:
          name: k8s
          path: k8s
      - name: Login to Azure Key Vault
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Get Key Vault secrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "anansi"
          secrets: 'CONTAINER-REGISTRY-READ, KUBECONFIG-ANANSI'
        id: keyVault
      - name: Login to kubernetes
        uses: azure/k8s-set-context@v1
        with:
            method: kubeconfig
            kubeconfig: ${{ steps.keyVault.outputs.KUBECONFIG-ANANSI }}
            context: anansi
        id: setcontext
      - name: Set imagePullSecret
        uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: 'ghcr.io'
          container-registry-username: ${{ github.repository_owner }}
          container-registry-password: ${{ steps.keyVault.outputs.CONTAINER-REGISTRY-READ }}
          secret-name: 'githubregistry'
        id: create-secret
      - name: Deploy to kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          manifests: k8s/app.yaml
          images: ghcr.io/${{ env.GITHUB_OWNER }}/${{ env.GITHUB_REPOSITORY }}/${{ env.GITHUB_IMAGE }}@${{ needs.build.outputs.DIGEST }}